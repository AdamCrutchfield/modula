<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprBorder</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-10000</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>width = (game.drawScale * 16);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//follow position control
x = objectToFollow.x + xOffset;
y = objectToFollow.y + yOffset;

//set contained item
item = game.inventory[slot, 0];
strength = game.inventory[slot, 1];

//vars
var Lclick = mouse_check_button_pressed(mb_left);
var Rclick = mouse_check_button_pressed(mb_right);
var mouseHovering = (abs(mouse_x - x) &lt; width) &amp;&amp; (abs(mouse_y - y) &lt; width);

//if clicked on, switch item with mouse
if (mouseHovering and (Rclick or Lclick)) {
    
    
    //if empty equipment slot, equip item. Otherwise, switch with mouse
    if (slot &gt;= 40 and slot &lt;= 49) {
        if (item = modNone) {
            script_execute(game.mouse[0], modEvents.pickup, game.mouse[1]);
            var _temp = item;
            var _tempStr = strength;
            
            game.inventory[slot, 0] = game.mouse[0];
            game.inventory[slot, 1] = game.mouse[1];
            
            game.mouse[0] = _temp;
            game.mouse[1] = _tempStr;
        }
    } else {
        var _temp = item;
        var _tempStr = strength;
        
        game.inventory[slot, 0] = game.mouse[0];
        game.inventory[slot, 1] = game.mouse[1];
        
        game.mouse[0] = _temp;
        game.mouse[1] = _tempStr;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//vars
var Lclick = mouse_check_button_pressed(mb_left);
var Rclick = mouse_check_button_pressed(mb_right);
var mouseHovering = (abs(mouse_x - x) &lt; width) &amp;&amp; (abs(mouse_y - y) &lt; width);
var textXOffset = 4;
var textYoffset = 4;

//draw self
sprite_index = sprBorder;
image_index = 0;
if (mouseHovering) image_index++;
if (slot &gt;= 40) image_index += 2;
if (slot &gt;= 50) image_index += 2;
draw_sprite_ext(sprite_index, image_index, x, y, game.drawScale, game.drawScale, 0, c_white, 1);

//draw held item
if (item != modNone) draw_sprite_ext(sprItems, getModImageIndex(item), x, y, game.drawScale, game.drawScale, 0, c_white, 1);

//draw strength value
if (strength != 1 and strength != 0) {
    draw_set_colour(c_black);
    draw_text(x+15, y-23, strength);
    draw_set_colour(c_white);
    draw_text(x+16, y-24, strength);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
