<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprBorder</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-10001</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>width = (game.drawScale * 16);

shownY = y;
hiddenY = y - objShop.shopHiddenYOffset;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>item = objShop.inventory[slot, 0]; //item being held in that box
strength = objShop.inventory[slot, 1];

if (game.showInv) {
    y += (shownY - y) / 1.5;
    
    //Variables
    var Lclick = mouse_check_button_pressed(mb_left);
    var Rclick = mouse_check_button_pressed(mb_right);
    var mouseHovering = (abs(mouse_x - x) &lt; width) &amp;&amp; (abs(mouse_y - y) &lt; width);
    
    //if mouse is hovering
    if (mouseHovering) {
        //If this box is clicked, switch items with the mouse
        if (Rclick or Lclick) {
            var _temp = item;
            var _tempStr = strength;
            
            objShop.inventory[slot, 0] = game.mouse[0];
            objShop.inventory[slot, 1] = game.mouse[1];
            
            game.mouse[0] = _temp;
            game.mouse[1] = _tempStr;
        }
    };
} else {
    y -= (shownY - y) / 1.5 - 1;
}

y = max(y, hiddenY);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
//Variables
var item = objShop.inventory[slot, 0]; //item being held in that box
var strength = objShop.inventory[slot, 1];
var Lclick = mouse_check_button_pressed(mb_left);
var Rclick = mouse_check_button_pressed(mb_right);
var mouseHovering = (abs(mouse_x - x) &lt; width) &amp;&amp; (abs(mouse_y - y) &lt; width);
var textXOffset = 4;
var textYoffset = 4;
 
//Draw a white box if mouse is hovering
if (mouseHovering) {
    sprite_index = sprBorderSelected;
} else {
    sprite_index = sprBorder;
}
draw_sprite_ext(sprite_index, 0, x, y, game.drawScale, game.drawScale, 0, c_white, 1);

 //If there's an item in a box, draw it
if (item != modNone) draw_sprite_ext(sprItems, getModImageIndex(item), x, y, game.drawScale, game.drawScale, 0, c_white, 1);

//draw strength value
if (strength != 1 and strength != 0) {
    draw_set_colour(c_black);
    draw_text(x+15, y-23, strength);
    draw_set_colour(c_white);
    draw_text(x+16, y-24, strength);
}

//debug
if slot == 0 draw_text(32, 32, y);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
